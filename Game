import pygame
import random

# Инициализация Pygame
pygame.init()

# Параметры экрана
WIDTH, HEIGHT = 400, 400
win = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Змейка")

# Цвета
BLACK = (0, 0, 0)
GREEN = (0, 255, 0)
RED = (255, 0, 0)

# Параметры змейки
snake_pos = [100, 50]
snake_body = [[100, 50], [90, 50], [80, 50]]
snake_speed = 15

# Параметры фрукта
fruit_pos = [random.randrange(1, (WIDTH//10)) * 10,
             random.randrange(1, (HEIGHT//10)) * 10]
fruit_spawn = True

# Направление движения
direction = 'RIGHT'
change_to = direction

# Функция рисования змейки
def draw_snake(snake_body):
    for pos in snake_body:
        pygame.draw.rect(win, GREEN, pygame.Rect(
            pos[0], pos[1], 10, 10))

# Функция рисования фрукта
def draw_fruit(fruit_pos):
    pygame.draw.rect(win, RED, pygame.Rect(
        fruit_pos[0], fruit_pos[1], 10, 10))

# Основной цикл игры
while True:
    for event in pygame.event.get():
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_UP:
                change_to = 'UP'
            if event.key == pygame.K_DOWN:
                change_to = 'DOWN'
            if event.key == pygame.K_LEFT:
                change_to = 'LEFT'
            if event.key == pygame.K_RIGHT:
                change_to = 'RIGHT'

    # Проверка на обратное движение
    if change_to == 'UP' and not direction == 'DOWN':
        direction = 'UP'
    if change_to == 'DOWN' and not direction == 'UP':
        direction = 'DOWN'
    if change_to == 'LEFT' and not direction == 'RIGHT':
        direction = 'LEFT'
    if change_to == 'RIGHT' and not direction == 'LEFT':
        direction = 'RIGHT'

    # Движение змейки
    if direction == 'UP':
        snake_pos[1] -= 10
    if direction == 'DOWN':
        snake_pos[1] += 10
    if direction == 'LEFT':
        snake_pos[0] -= 10
    if direction == 'RIGHT':
        snake_pos[0] += 10

    # Добавление головы к телу змейки
    snake_body.insert(0, list(snake_pos))

    # Проверка на столкновение с фруктом
    if snake_pos[0] == fruit_pos[0] and snake_pos[1] == fruit_pos[1]:
        fruit_spawn = False
    else:
        snake_body.pop()

    if not fruit_spawn:
        fruit_pos = [random.randrange(1, (WIDTH//10)) * 10,
                     random.randrange(1, (HEIGHT//10)) * 10]

    fruit_spawn = True
    win.fill(BLACK)
    draw_snake(snake_body)
    draw_fruit(fruit_pos)

    pygame.display.update()

    # Проверка на столкновение с границами
    if snake_pos[0] >= WIDTH or snake_pos[0] <= 0 or \
            snake_pos[1] >=
